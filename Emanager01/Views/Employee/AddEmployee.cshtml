<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Emanager</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="dashboard">Dashboard</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</header>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@




@model Employee


<div class="text-center">



    @if (Model != null)
    {

        Emanager01.Data.EmployeeQuerry employeeQuerry = new Emanager01.Data.EmployeeQuerry();

        Employee employee = (Employee)employeeQuerry.get(Model.EmployeeId.ToString());

        if (employee != null)
        {

            @using (Html.BeginForm("UpdateEmployee", "Employee", FormMethod.Post))
            {

                <h5>Edit @Model.FirstName's details</h5>
                <hr />
                <br />

                @Html.LabelFor(m => m.EmployeeId, new { @class = "textBoxInfoLable" })
                @Html.TextBoxFor(m => m.EmployeeId, new { @class = "form-control addEmployee", @value = Model.EmployeeId, @readonly = "true" })
                <br />
                @Html.LabelFor(m => m.FirstName, new { @class = "textBoxInfoLable" })
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control addEmployee", @value = Model.FirstName })
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "error" })
                <br />
                @Html.LabelFor(m => m.LastName, new { @class = "textBoxInfoLable" })
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control addEmployee", @value = Model.LastName })
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "error" })
                <br />
                //Date of birth

                <label for="dateOfBirth" class="textBoxInfoLable">Start of Contract</label>
                <input type="date" id="start" name="dateOfBirth" value="@Model.DateOfBirth.ToString("yyyy-MM-dd")"
                       min="1930-01-01" max="2010-01-01" class="form-control addEmployee datepicker">

                <br />

                @Html.LabelFor(m => m.Email, new { @class = "textBoxInfoLable" })
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control addEmployee", @value = Model.Email })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "error" })

                <br />
                <label for="departaments" class="textBoxInfoLable">Departament</label>
                <select name="departaments" class="form-control addEmployee">
                    <option value="Sales" selected="selected">Sales</option>
                    <option value="Marketing">Marketing</option>
                    <option value="Finance">Finance</option>
                    <option value="Research and Development">Research and Development</option>
                    <option value="Human Resource Management">Human Resource Management</option>
                    <option value="Production">Production</option>
                </select>

                <br />
                @Html.LabelFor(m => m.Gender, new { @class = "textBoxInfoLable" })
                @Html.RadioButtonFor(m => m.Gender, "M", "Male")<label>-      Male</label>
                @Html.RadioButtonFor(m => m.Gender, "F", "Female")<label>-    Female</label>
                @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "error" })

                <br />
                @Html.LabelFor(m => m.Phone, new { @class = "textBoxInfoLable" })
                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control addEmployee", @value = Model.Phone })
                @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "error" })
                <br />

                @Html.LabelFor(m => m.AddressId, new { @class = "textBoxInfoLable" })
                @Html.TextBoxFor(m => m.AddressId, new { @class = "form-control addEmployee", @value = "Contract ID: " + Model.AddressId, @readonly = "true" })
                <br />
                @Html.LabelFor(m => m.ContractId, new { @class = "textBoxInfoLable" })
                @Html.TextBoxFor(m => m.ContractId, new { @class = "form-control addEmployee", @value = "Contract ID: " + Model.ContractId, @readonly = "true" })

                <br />
                <br />
                <br />
                <button type="submit" value="Login" class="btn btn-warning" id="submit">Update Employee</button>
            }

        }
        else
        {

            @using (Html.BeginForm("SaveEmployee", "Employee", FormMethod.Post))
            {


                <h5>Add new Employee</h5>
                <hr />
                <br />
                @Html.LabelFor(m => m.FirstName, new { @class = "textBoxInfoLable" })
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control addEmployee", @placeholder = "First Name" })
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "error" })
                <br />
                @Html.LabelFor(m => m.LastName, new { @class = "textBoxInfoLable" })
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control addEmployee", @placeholder = "Last Name" })
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "error" })
                <br />
                //Date of birth

                <label for="dateOfBirth" class="textBoxInfoLable">Date of birth</label>
                <input type="date" id="start" name="dateOfBirth" value="@Model.DateOfBirth.ToString("yyyy-MM-dd")"
                       min="1930-01-01" max="2010-01-01" class="form-control addEmployee datepicker">

                <br />

                @Html.LabelFor(m => m.Email, new { @class = "textBoxInfoLable" })
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control addEmployee", @placeholder = "Email" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "error" })

                <br />
                <label for="cars" class="textBoxInfoLable">Departament</label>
                <select name="departaments" class="form-control addEmployee" required>
                    <option value="Sales" selected="selected">Sales</option>
                    <option value="Marketing">Marketing</option>
                    <option value="Finance">Finance</option>
                    <option value="Research and Development">Research and Development</option>
                    <option value="Human Resource Management">Human Resource Management</option>
                    <option value="Production">Production</option>
                </select>

                <br />
                @Html.LabelFor(m => m.Gender, new { @class = "textBoxInfoLable" })
                @Html.RadioButtonFor(m => m.Gender, "M", "Male")<label>-      Male</label>
                @Html.RadioButtonFor(m => m.Gender, "F", "Female")<label>-    Female</label>
                @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "error" })
                <br />
                @Html.LabelFor(m => m.Phone, new { @class = "textBoxInfoLable" })
                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control addEmployee", @placeholder = "Phone" })
                @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "error" })
                <br />
                <a type="button" class="btn btn-light" href="@Url.Action("AddressView", "Employee", employee)">Add Address</a>
                <a type="button" class="btn btn-light" href="@Url.Action("ContractView", "Employee", employee)">Add Contract</a>
                <br />
                <br />
                <br />
                <button type="submit" value="Login" class="btn btn-primary" id="submit">Register Employee</button>

            }


        }


    }

</div>
